{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishform.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/StorePicker.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","transitionOptions","classNames","timeout","enter","exit","status","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","fishkey","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","orderKey","addToOrder","details","isAvailable","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","StorePicker","myInput","goToStore","storeName","history","push","defaultValue","required","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.befce4a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => {\n    return (\n        <header className=\"top\">\n            <h1>\n                Catch\n                <span className=\"ofThe\">\n                    <span className=\"of\">of</span>\n                    <span className=\"the\">the</span>\n                </span>\n                Day\n            </h1>\n            <h3 className=\"tagline\">\n                <span>{props.tagline}</span>\n            </h3>\n        </header>\n    )\n}\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n\n        //CSSTranstion options\n        const transitionOptions = {\n            classNames: \"order\", \n            key, \n            timeout: { enter: 250, exit: 250 }\n        }\n\n        //Make sure fish is loaded before we continue - this fixes localstorage setState error\n        if (!fish) return null;\n\n        const isAvailable = fish.status === 'available';\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n            <li key={key} className=\"relative-container\">\n                <span>\n                    <TransitionGroup component=\"span\" classNames=\"count\">\n                        <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 250, exit: 250 }}>\n                            <span>{count}</span>\n                        </CSSTransition>\n                    </TransitionGroup>\n                    lbs {fish.name}\n                    {formatPrice(count * fish.price)}\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </span>\n            </li>\n            </CSSTransition>\n        );\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n\n            const isavailable = fish && fish.status === 'available';\n            if (isavailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n\n    static propTypes = {\n        addFish: PropTypes.func\n    };\n\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n    createFish = (event) => {\n        event.preventDefault();\n\n        // Get texts from input\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value), //make it number, not a string\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        }\n\n        // Pass fish inputs into props (from App and inventory components)\n        this.props.addFish(fish);\n\n        // Reset the form after add fish button is clicked on\n        event.currentTarget.reset();\n\n    };\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\n                <button type=\"submit\"> + Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\n    static propTypes = {\n        fish: PropTypes.shape({\n            name: PropTypes.string,\n            price: PropTypes.number,\n            image: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    };\n\n    handleChange = event => {\n        //Update the fish\n        //1. Take a copy of fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        } //correct this later: the price is back to being a string when input is edited - it should be a number\n\n        //updateFish prop and function from the app.js\n        this.props.updateFish(this.props.index, updatedFish);\n\n    };\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} placeholder=\"Desc\"></textarea>\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In with Github</button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log In with Twitter</button>\n        <button className=\"google\" onClick={() => props.authenticate('Google')}>Log In with Google</button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In with Facebook</button>\n    </nav>\n)\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCyLgVSoIWtyasYQoy2eO8jDD84ZGKNCGM\",\n    authDomain: \"catch-of-the-day-obiagba.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-obiagba-default-rtdb.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport { firebaseApp };\n\n//default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishform';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport firebase, { auth } from 'firebase';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object, //use shape if you like\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    }\n    state = {\n       uid: null,\n       owner: null \n    }\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n    authHandler = async (authData) => {\n        //1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        console.log(authData);\n        //2. Claim it if there is no owner\n        if (!store.owner) {\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        //3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    }\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({\n            uid: null\n        })\n    }\n    render() {\n        const logout = <button onClick={this.logout}>Log Out</button>\n\n        //1. Check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n\n        //2. Check if they are NOT the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        //3. Render the inventory for owner\n        return (\n            <div className=\"inventory\">\n                <h3>Inventory</h3>\n                {logout}\n                {Object.keys(this.props.fishes).map(fishkey => (\n                    <EditFishForm key={fishkey} \n                        index={fishkey} \n                        fish={this.props.fishes[fishkey]} \n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            name: PropTypes.string,\n            price: PropTypes.number,\n            image: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string\n        }),\n        addToOrder: PropTypes.func\n    };\n    handleClick = () => {\n        const orderKey = this.props.index;\n        this.props.addToOrder(orderKey);\n    };\n    render() {\n        const details = this.props.details;\n        const isAvailable = details.status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={details.image} alt={details.name} />\n                <h3 className=\"fish-name\">\n                    {details.name}\n                    <span className=\"price\">{formatPrice(details.price)}</span>\n                </h3>\n                <p>{details.desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable? 'Add to Order': 'Sold Out'}</button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n\n    static propTypes = {\n        match: PropTypes.object\n    };\n\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n\n        //First reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        console.log(localStorageRef);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    addFish = fish => {\n        //1. Take a copy of the existing state\n        const fishes = {...this.state.fishes};\n        //2. Add our new fish to the fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        //3. Set the new fish object to state\n        this.setState({ fishes });\n    };\n    updateFish = (key, updatedFish) => {\n        //1. Take a copy of the current (fish) state\n        const fishes = {...this.state.fishes};\n        //2. Update that state\n        fishes[key] = updatedFish;\n        //3. Set that to state\n        this.setState({ fishes });\n    };\n    deleteFish = key => {\n        //1. Take a copy of state\n        const fishes = {...this.state.fishes};\n        //2. Update the state\n        fishes[key] = null;\n        //3. Set it to state\n        this.setState({ fishes });\n    };\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes});\n    };\n    addToOrder = key => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. Either add to the order or update (increment) the number in our order\n        order[key] = order[key] + 1 || 1;\n        //3. Call setstate to update our state object\n        this.setState({ order })\n    };\n    removeFromOrder = key => {\n        //1. Take a copy of state\n        const order = {...this.state.order};\n        //2. delete from the order\n        delete order[key];\n        //3. Call setstate to update our state object\n        this.setState({ order });\n    }\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(fishkey => ( \n                            <Fish key={fishkey}\n                                index={fishkey}\n                                details={this.state.fishes[fishkey]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))} \n                    </ul>\n                </div>\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder}/>\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes} \n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Page Not Found!!!</h2>\n    </div>\n);\nexport default NotFound;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers'; //Already prepared helper/utility function\n\nclass StorePicker extends React.Component {\n\n    static propTypes = {\n        history: PropTypes.object\n    }\n\n    myInput = React.createRef();\n\n    goToStore = event => {\n        //1. Prevent form from submitting (page reload)\n        event.preventDefault();\n        console.log('go to store...');\n        //2. Get text from input\n        const storeName = this.myInput.current.value;\n        //3. Route or change the page to /store/input-from-user-or-helper-function\n        this.props.history.push(`/store/${storeName}`);\n    }\n    render() {\n        return (\n            <Fragment>\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\n                    <h2>Please enter a store</h2>\n                    <input\n                     type=\"text\"\n                     ref={this.myInput}\n                     placeholder=\"Store Name\" \n                     defaultValue={getFunName()} \n                     required\n                    />\n                    <button type=\"submit\">Visit Store ➡ </button>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport NotFound from './NotFound';\nimport StorePicker from './StorePicker';\n\nconst Router = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={StorePicker}/>\n                <Route path=\"/store/:storeId\" component={App}/>\n                <Route component={NotFound}/>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\n\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}